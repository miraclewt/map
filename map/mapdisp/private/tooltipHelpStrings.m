function str = tooltipHelpStrings(uiControlName)
% Return help strings for:
%
%   1) Dialogs accessed via the MAPTOOL "Map" menu (in maptool.m)
%   2) demcmapui accessed via the MAPTOOL "Colormap" menu (in clrmenu.m)
%   2) trackui
%   3) scirclui
%   4) surfdist
%   5) private/lengthUnitDialog

% Copyright 2013 The MathWorks, Inc.

str2 = '';
switch(uiControlName)

case 'Latitude'   %  MAPTOOL: Help for latitude variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the latitude data.'];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];

case 'Longitude'  % MAPTOOL:  Help for longitude variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the longitude data.'];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];

case 'Map'          % MAPTOOL: Help for map variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the matrix map.'];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];

case 'Altitude'   % MAPTOOL: Help for altitude variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the altitude data.  A scalar numerical ',...
			'entry can be entered instead of a variable name to specify ', ...
            'the plane in which to display the object.'];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];
        
case 'PatchAltitude' % MAPTOOL: Help for scalar altitude variable (patchm only)

    str1 = ['Enter a scalar value to specify the plane in which ',...
	        'to display the patch map object.'];
	str2 = ['A valid workspace variable may also be entered, provided ',...
	        'that this variable is a scalar.'];

case 'Text'       % MAPTOOL: Help for text variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the text strings.'];
	str2 = ['A text string can be directly entered, provided that ',...
	        'it is enclosed in single quotes.'];

case 'Maplegend'   % MAPTOOL: Help for raster reference variable edit box
    
	str1 = ['Enter the name of the workspace variable ',...
	        'that contains the referencing object or vector.'];
	str2 = ['A referencing vector can also be entered directly as ', ...
            '[cells/degree northern_latitude_limit western_longitude_limit].'];
        
case 'Npts'        % MAPTOOL: Help for graticule size variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the matrix map graticule size.'];
	str2 = ['A two-element vector enclosed in square brackets can also be ',...
	        'entered instead of a variable name.'];

case 'StemHeight'   % MAPTOOL: Help for stem height variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the stem height data.'];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];

case 'MarkerSizeWeight'   % MAPTOOL: Help for count data variable edit box

    str1 = ['Enter a scalar marker size or the name of the workspace variable ',...
	        'that contains the marker size data. ',...
	        'The length of the vector must be ',...
			'the same as that of the lat and lon vectors. The data must also be positive and in units of points^2'];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ). '];

case 'MarkerColor'      % MAPTOOL: Help for count data variable edit box

    str1 = ['Enter a ColorSpec string (''r''), a three element RGB color ([1 0 0]), ',...
			'or the name of the workspace variable that contains the marker color data. ',...
	        'The length of the vector must be ',...
			'the same as that of the lat and lon vectors'];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];

case 'MarkerSymbolPopup'  % MAPTOOL

    str1 = 'Select the marker from the popup menu.';
	str2 = 'This marker will be applied to all of the data.';
    
case 'FillCheck'          % MAPTOOL
    
	str1 = 'Markers will be filled when this box is checked.';
	str2 = 'This will apply to all of the markers.';
        
case 'UComponent'        % MAPTOOL: Help for U component variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the U vector component data. The vector is ',... 
	        'plotted from (lat,lon,alt) to (lat+U,lon+V,alt+W). '];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];

case 'VComponent'       % MAPTOOL: Help for V component variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the V vector component data. The vector is ',... 
	        'plotted from (lat,lon,alt) to (lat+U,lon+V,alt+W). '];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];

case 'WComponent'       % MAPTOOL: Help for W component variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the W vector component data. The vector is ',... 
	        'plotted from (lat,lon,alt) to (lat+U,lon+V,alt+W). '];
	str2 = ['MATLAB expressions with a numerical result are also ',...
	        'valid entries (e.g. ones([10 10]) ).'];

case 'FaceColor'   % MAPTOOL: Help for scalar face color variable (patchm only)

    str1 = ['Enter a valid face color string or RGB triple.  A color ',...
	        'string must be enclosed in single quotes.  If omitted, ',...
	        'a default color will be used.'];
	str2 = ['A valid workspace variable may also be entered, provided ',...
	        'that this variable is a color string or RBG triple.'];

case 'LineSpec'           %  Help for line spec variable
	str1 = ['Enter a valid LineSpec string enclosed in single quotes.  Make ',...
	        'sure that the LineSpec string contains a symbol definition.'];
	str2 = sprintf('%s\n%s','Example:''  ''b*'' ');

case 'OtherProperties1'  % MAPTOOL: Help for other property edit box
                         %  LineSpec strings are valid entries in this case
	str1 = ['Any other properties of the object to be displayed may be ',...
	        'specified here.  Any string entry must be enclosed ',...
			'in single quotes.  LineSpec strings are also valid entries.'];
	str2 = sprintf('%s\n%s\n%s\n%s','Examples:',...
        '  ''b-'' ','  ''LineWidth'',2 ','  ''b-'',''LineWidth'',2 ');

case 'OtherProperties2'  % MAPTOOL: Help for other property edit box
                         %  LineSpec strings are not valid entries
	str1 = ['Any other properties of the object to be displayed may be ',...
	        'specified here.  Any string entry must be enclosed ',...
			'in single quotes ''''.'];
	str2 = sprintf('%s\n%s','Example:','  ''LineWidth'',2 ');

case 'ListButton'  %  MAPTOOL: Help for variable pick list button

    str1 = ['Pressing this button will produce a list of current ',...
	       'workspace variables.  The desired variable can be selected ',...
		   'from this list.'];

case 'QuiverScale'       % MAPTOOL: Help for quiver scale edit box

    str1 = ['Enter a scalar value to specify the scale factor applied ',...
	        'to the vectors. To suppress the automatic scaling, specify s = 0.'];
	str2 = ['A valid workspace variable may also be entered, provided ',...
	        'that this variable is a scalar.'];

case 'FilledBase'        % MAPTOOL: Help for filled base check box (quivers)

    str1 = 'Check this box to fill the base markers of the vectors.';
	str2 = ['If checked, make sure that the LineSpec string contains ',...
	        'a symbol definition.'];

case 'ContourLevels'     % MAPTOOL: Help for contour levels variable edit box

    str1 = ['Enter the name of the workspace variable ',...
	        'that contains the desired contour levels.'];
	str2 = ['A vector enclosed in square brackets can also be ',...
	        'entered instead of a variable name.'];

case 'ContourMode'       % MAPTOOL: Help for contour mode radio buttons

    str1 = ['Using these radio buttons, a 2D or 3D contour map can ',...
	        'be specified.  In a 2D contour map, all contour levels ',...
			'are drawn in the z = 0 plane.  In a 3D contour map, the ',...
			'contour lines are drawn in their corresponding z plane.'];

case 'ContourLegend'      % MAPTOOL: Help for contour legend popup menu

    str1 = ['This popup menu specifies the label or legend ',...
	        'to be added to the contour map.  If the Plot Legend option ',...
			'is chosen, any existing legend will be deleted.  If a ',...
			'manual label option is chosen, then the contours to be ',...
			'labelled are specified by clicking on them after they ',... 
			'have been plotted.'];

case 'LightMode'     % MAPTOOL: Help for light mode check box (light)

    str1 = 'Check this box to specify parallel rays from an infinite light source.';
	str2 = 'If checked, the altitude variable has no effect.';

case 'LightColor'    % MAPTOOL: Help for light color popup menu (light)

    str1 = 'Use this popup menu to specify the light color.';
	str2 = 'An RGB triple can be specified by selecting the custom option.';
    
case 'MapLimit'       % MAPTOOL: Help for contour MLimit button
    
	str1 = ['This button enables the latitude and longitude limits of a regular matrix ',...
	        'map to be computed.  The results of this computation are ',...
			'stored as variables in the workspace.  Afterwards, these ',...
			'limit variables can be used as the latitude and ',...
			'longitude inputs for the contour map.  This allows contour maps to be computed ',...
			'for regular matrix maps.'];

case 'LatitudeLimit'   % MAPTOOL: Help for latitude limit variable edit box

    str1 = ['Enter the name of the workspace variable which will ',...
	        'store the computed latitude limits of the matrix map.'];
	str2 = 'If this variable exists in the workspace, it will be overwritten.';

case 'LongitudeLimit'  % MAPTOOL: Help for longitude limit variable edit box

    str1 = ['Enter the name of the workspace variable which will ',...
	        'store the computed longitude limits of the matrix map.'];
	str2 = 'If this variable exists in the workspace, it will be overwritten.';
    
case 'AzEl'            %  MAPTOOL: Help for azimuth and elevation variable edit box

    str1 = ['Use this entry to specify the location of the light source, ',...
           'defined by an azimuth and elevation [az el].  Angles are ',...
           'in degrees, with the azimuth measured clockwise from North, ',...
			  'and elevation up from the zero plane of the surface.'];
	str2 = 'If data is supplied, then the vector must be enclosed in square brackets.';

case 'CLim'           %  MAPTOOL: Help for color limit edit box

    str1 = ['Use this entry to specify the two-element [cmin cmax] ',...
           'color limit vector.  This vector is used with caxis.  If omitted, ',...
			  'these caxis limits are computed from the map.'];
	str2 = 'If data is supplied, then the vector must be enclosed in square brackets.';

case 'ColorMap'       %  MAPTOOL: Help for colormap edit box

    str1 = ['Use this entry to supply a user defined colormap.  The number ',...
           'of grayscales is chosen to keep the size of the shaded colormap ',...
			  'below 256.'];
	str2 = ['To use the current colormap in the figure window, enter the  ',...
	        'string ''window'' for the colormap.'];

case 'DEMMode'     % CLRMENU/demcmapui: Help for DEMCMAP mode radio button

    str1 = ['These radio buttons define the construction mode for the ',...
	        'digital elevation colormaps.  If "Size" is selected, ',...
			  'then the length of the colormap is specified.  If omitted, ',...
			  'a length of 64 is assumed.  If "Range" is selected, then ',...
			  'the altitude range assigned to each color is specified.  If ',...
			  'omitted, a range of 100 is assumed.'];

case 'DEMSize'     % CLRMENU/demcmapui: Help for DEMCMAP colormap size edit box

    str1 = ['Use this entry to define the length of the colormap.  If omitted, ',...
           'then a length of 64 is assumed.'];
	str2 = 'Only scalars are allowed for this entry.';

case 'DEMRange'    % CLRMENU/demcmapui: Help for DEMCMAP altitude range edit box

    str1 = ['Use this entry to define the altitude range assigned to each ',...
	        'color.  If omitted, then a range of 100 is assumed.'];
	str2 = 'Only scalars are allowed for this entry.';

case 'RGBSea'     % CLRMENU/demcmapui: Help for DEMCMAP sea RGB edit box

    str1 = ['Use this entry to replace the default colors for sea data.  ',...
	        'The colors are interpolated from the RGB color matrix, which can be of any length. ',...
           'Default colors for the sea data can be retained by leaving this ',...
			  'entry blank.  The current figure colormap can be specified ',...
			  'by entering the string ''window''.'];
	str2 = ['If RGB data is directly specified, then it must be enclosed ',...
	        'in square brackets (eg: [0 0 0; 0.5 0.5 0.5; 1 1 1]).'];

case 'RGBLand'     % CLRMENU/demcmapui: Help for DEMCMAP land RGB edit box

    str1 = ['Use this entry to replace the default colors for land data.  ',...
	        'The colors are interpolated from the RGB color matrix, which can be of any length. ',...
           'Default colors for the land data can be retained by leaving this ',...
			  'entry blank.  The current figure colormap can be specified ',...
			  'by entering the string ''window''.'];
	str2 = ['If RGB data is directly specified, then it must be enclosed ',...
	        'in square brackets (eg: [0 0 0; 0.5 0.5 0.5; 1 1 1]).'];
        
case 'TrackStyle'              %  Help for track style radio buttons

	str1 = ['Use these radio buttons to specify whether a "Great Circle" ',...
	        'or "Rhumb Line" track is displayed.'];

case 'TrackMode'              %  Help for track mode radio buttons

	str1 = ['Use these radio buttons to choose how the track will be ',...
	        'defined.  Two point specification requires the starting ',...
			'and ending points of the track.  One point specification ',...
			'requires the starting point, azimuth and range for the track.'];
	str2 = ['The range is an optional argument used to ',...
			'define a fixed distance along the track.  If a scalar is ',...
			'supplied, the track travels the specified distance from ',...
			'the starting point.  If a vector is supplied, it must ',...
			'be a two-element vector defining the starting and ending range along ',...
			'the track, and it must be enclosed in square brackets.'];

case 'CircleStyle'              %  Help for track style radio buttons

	str1 = ['Use these radio buttons to specify the style of the ',...
	        'small circle.  If "Great Circle" is selected, then the ',...
			'circle radius is a constant great circle distance.  If ',...
			'"Rhumb Line" is specified, then the circle radius is a constant ',...
			'rhumb line distance.'];
	str2 = 'The Great Circle style is the standard definition of a small circle.';

case 'CircleMode'              %  Help for track mode radio buttons

	str1 = ['Use these radio buttons to select how the small circle will be ',...
	        'defined.  Two point specification requires the ',...
			'center point and a  point on the circle.  One point ',...
			'specification requires the center point, radius ',...
	        'and azimuth.'];
	str2 = ['The azimuth is an optional argument used to ',...
			'define a sector of the small circle to be displayed.  ',...
			'If a scalar is supplied, the starting azimuth is 0.  If a ',...
			'vector is supplied, it must be a two-element row vector defining the ',...
			'starting and ending azimuths, and it must be enclosed in square brackets.'];

case 'SurfaceStyle'              %  Help for surfdist style radio buttons

	str1 = ['Use these radio buttons to specify whether a "Great Circle" ',...
	        'or "Rhumb Line" is used to compute the surface distance.'];
	str2 = ['When all entries are provided, selecting a style option ',...
	        'will recalculate the surface distance calculation.'];

case 'SurfaceMode'              %  Help for surfdist mode radio buttons

	str1 = ['Use these radio buttons to control the specification of ',...
	        'the distance calculation.  Two point specification requires ',...
			'the starting and ending points of the track to be defined.  ',...
			'The distance and azimuth along this track are then computed.'];
	str2 = ['One point specification require the starting point, range and ',...
	        'azimuth to be defined.  The ending point latitude and ',...
			'longitude are then computed.'];

case 'AngleLabel'           %  Help for angle label text display

	str1 = ['This text string displays the current angle units and ',...
	        'range units.'];

case 'ShowTrack'           %  Help for show track check box

	str1 = ['This check box determines if the defined track is shown ',...
	        'on the associated map axes.  This track will be deleted ',...
			'upon closing the tool or by deselecting this box and ',...
			'recomputing the surface distance calculations.'];

case 'TrackStart'           %  Help for track starting point

	str1 = ['These edit boxes allow the latitude and longitude of the starting point ',...
	        'to be defined.  Starting points must be in degrees.'];
	str2 = ['Both scalar and vector starting points may be entered.  If ',...
	        'vector entries are provided, they must be enclosed in square brackets.'];

case 'TrackEnd'           %  Help for track ending point

	str1 = ['These edit boxes allow the latitude and longitude of the ending ',...
	        'point to be defined.  Ending points must ',...
			'be in degrees.'];
	str2 = ['Vector entries are used to specify more than one track, and must  ',...
	        'be enclosed in square brackets.'];

case 'TrackDirection'           %  Help for track direction

	str1 = ['These edit boxes allow the track direction (azimuth and ',...
	        'range) to be defined.  The azimuth is in degrees measured ',...
			'clockwise from due north.  The range is in the units specified ',...
			'by the Range Units button.  The default range units are ',...
			'kilometers.  Valid expressions such as sm2km(1000) are ',...
			'acceptable range entries.  If the range is omitted, then ',...
			'a complete track is drawn.  Complete great circles traverse ',...
			'the globe and complete rhumb lines travel from pole to pole.'];
	str2 = ['Both scalar and vector directions may be entered.  If ',...
	        'vector entries are provided, they must be enclosed in square brackets.'];

case 'CircleCenter'           %  Help for circle center point

	str1 = ['These edit boxes allow the latitude and longitude of the small ',...
	        'circle center(s) to be defined.  Center points must ',...
			'be in degrees.'];
	str2 = ['To enter more than one small circle center, provide latitude and ',...
	        'longitude vectors enclosed in square brackets.'];

case 'CirclePoint'           %  Help for circle point

	str1 = ['These edit boxes allow a point on the small circle (latitude ',...
	        'and longitude) to be defined.  The circle point(s) must ',...
			'be in degrees.'];
	str2 = ['Both scalar and vector circle points may be entered.  If ',...
	        'vector entries are provided, they must be enclosed in square brackets.'];

case 'CircleDefinition'           %  Help for circle size and sector

	str1 = ['These edit boxes allow the small circle to be defined ',...
	        'by a radius and sector azimuth. The sector azimuth defines ',...
	        'the angular limits of the circle. Azimuth may be defined as a ',...
	        'two-element vector containing the start and end angles, or as a ',...
	        'scalar ending angle. In that case the starting angle is implicitly zero. ',...
	        'The azimuth is in degrees ',...
			'measured clockwise from due north.  The radius is in the ',...
			'units specified by the ',...
			'Radius Units button.  The default radius units are ',...
			'kilometers.  Valid expressions such as sm2km(1000) are ',...
			'acceptable radius entries.  If the azimuth is omitted, ',...
			'then a complete small circle is drawn.'];
	str2 = ['Both scalar and vector definitions may be entered.  If ',...
	        'vector entries are provided, they must be enclosed in square brackets.'];

case 'DistanceStart'           %  Help for surface distance starting point

	str1 = ['These edit boxes allow the track starting point (latitude ',...
	        'and longitude) to be defined.  The starting point must ',...
			'be in degrees.'];
    str2 = 'Only single points may be entered.';

case 'DistanceEnd'           %  Help for surface distance ending point

	str1 = ['These edit boxes allow the track ending point (latitude ',...
	        'and longitude) to be defined, and are only used when ',...
	        'two-point mode is selected.  The ending point must ',...
			'be in degrees.'];
    str2 = 'Only single points may be entered.';

case 'DistanceDirection'           %  Help for surface distance direction edits

	str1 = ['These edit boxes allow the reckoning azimuth and range ',...
	        'to be defined. The starting point, range and azimuth ',...
			'are used to calculate the displayed ending point.  The azimuth is in ',...
			'degrees measured clockwise from due north.  The range is ',...
			'in the units specified by the ',...
			'Range Units button.  The default range units are ',...
			'kilometers.  Valid expressions such as sm2km(1000) are ',...
			'acceptable radius entries.'];
    str2 = 'Only single points may be entered.';

case 'RangeUnits'           %  Help for range units button

	str1 = ['This button allows the range units to be defined.  The ',...
	        'track range must be entered in these units.'];
	str2 = ['This button also allows the normalizing geoid to ',...
	        'be defined.  The normalizing geoid is used to convert the ',...
			'specified range into radian units for proper ',...
			'projection onto the map axes. This allows use of spherical or ellipsoidal ',...
            'models of the Earth or other planetary bodies.'];

case 'RadiusUnits'           %  Help for radius units button

	str1 = 'This button allows the radius units to be defined.';
	str2 = ['This button also allows the normalizing geoid to ',...
	        'be defined.  The normalizing geoid is used to convert the ',...
			'specified radius into radian units for proper ',...
			'projection onto the map axes. This allows use of spherical or ellipsoidal ',...
         'geoid models of the Earth or other planetary bodies.'];

case 'MouseSelect'           %  Help for mouse selection button

	str1 = ['This button allows the point to be selected ',...
	        'by clicking on the displayed map.  The coordinates of the selected point will be placed ',...
			'in the edit boxes and can be subsequently edited.'];
	str2 = ['The selected point will be in degrees, regardless ',...
	        'of the angle units used with the displayed map.'];

case 'BigEdit'           %  Help for big edit buttons

	str1 = ['This button will bring up an expanded edit box for ',...
	        'the entry.'];
	str2 = 'This allows long entries to be easily edited.';

case 'ScalarAltitude'           %  Help for scalar altitude variable (patchm only)

	str1 = 'Enter a scalar value to specify the plane in which the object is drawn. ';

case 'OtherProperties'          %  Help for other property edit box
                                %  LineSpec strings are valid entries in this case

	str1 = ['Any other properties of the object to be displayed may be ',...
	        'specified here.  Any string entry must be enclosed ',...
			'in single quotes.  LineSpec strings are also a valid entry.'];
	str2 = 'Examples:';
	str3 = '  ''b-'' ';
	str4 = '  ''LineWidth'',2 ';
	str5 = '  ''b-'',''LineWidth'',2 ';
    str1 = sprintf('%s\n\n%s\n%s\n%s\n%s',str1,str2,str3,str4,str5);
    
case 'RangePopup'           %  Help for range units popup menu

	str1 = 'The range units are selected from this list.';
	str2 = ['All range units other than radians are converted to angular ',...
	        'units using the normalizing geoid.'];

case 'NormalizingGeoid'           %  Help for normalizing geoid edit box

	str1 = ['This entry defines the radius used to normalize all ',...
	        'range entries to a radian value.  This normalization is ',...
			'necessary for proper computation and projection of the ',...
			'map data.  If a geoid specification is provided, the geoid ',...
			'is transformed to the appropriate auxiliary sphere to ',...
			'determine the normalizing radius.'];
	str2 = ['If the range units are radians, then the normalizing ',...
	        'geoid must be the same as the geoid used in the ',...
			'associated map axes.'];

case 'Apply'                    %  Help for the apply button

	str1 = 'Pressing the Apply button will apply the current settings.';

case 'Compute'                    %  Help for the compute button

	str1 = ['Pressing the Compute button will calculate the specified ',...
	        'surface distance.'];
case 'Close'                    %  Help for the close button

	str1 = 'Pressing the Close button will close this tool.';

case 'Cancel'                    %  Help for the cancel button

	str1 = 'Pressing the Cancel button will abort the current operation.';

case 'surfdistHelp'

	str1 = 'Pressing the Help button will open the reference page for the surfdist Tool.';

case 'trackuiHelp'

	str1 = 'Pressing the Help button will open the reference page for the trackui Tool.';

case 'scircluiHelp'

	str1 = 'Pressing the Help button will open the reference page for the scirclui Tool.';

end

maxlen = 60;
str1 = wrapstr(str1,maxlen);
if isempty(str2)
    str = str1;
else
    % The space between the new lines is needed to ensure that a blank line
    % separates str1 and str2.
    str = sprintf('%s\n \n%s',str1,wrapstr(str2,maxlen));
end

%--------------------------------------------------------------------------

function wrapped = wrapstr(str,maxlen)

w = cell(ceil(1.2*length(str)/maxlen),1);
last = 1;
spaces = [find(str == ' ') numel(str)];
k = 1;
while(last < numel(str))
    t = spaces(spaces < (maxlen + last-1));
    w{k} = str(last:t(end));
    last = t(end) + 1;
    k = k + 1;
end
w(k+1:end) = [];
wrapped = sprintf('%s\n',w{:});
wrapped(end) = [];
